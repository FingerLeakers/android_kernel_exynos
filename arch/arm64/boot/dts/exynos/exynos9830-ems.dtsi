/*
 * SAMSUNG EXYNOS SoC EMS device tree source
 *
 * Copyright (c) 2019 Samsung Electronics Co., Ltd.
 *             http://www.samsung.com
 *
 * SAMSUNG EXYNOS SoC EMS device nodes are listed in this file.
 * EXYNOS based board files should include this file.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 */
#include <dt-bindings/soc/samsung/ems.h>

/ {
	ems {
		/* Load Balance Trigger */
		#define DEFAULT_RATIO	80
		lbt {
			pre-overutilized-cpus = "0-5";

			overutil-level0 {
				cpus =	"0-3",
					"4-5",
					"6-7";
				ratio =	<25>,
					<25>,
					<30>;
			};
			overutil-level1 {
				cpus = "0-7";
				ratio = <DEFAULT_RATIO>;
			};
		};

		/* FRT Migration */
		frt {
			/* little cores */
			coregroup0 {
				coverage-ratio = <30>;
				active-ratio = <25>;
			};
			/* middle cores */
			coregroup1 {
				coverage-ratio = <30>;
				active-ratio = <3>;
			};
			/* big cores */
			coregroup2 {
				coverage-ratio = <30>;
				active-ratio = <5>;
			};
		};

		part {
			/* little cores */
			coregroup0 {
				active-ratio-limit = <43>;
				active-ratio-boost = <42>;
			};
			/* middle cores */
			coregroup1 {
				active-ratio-limit = <48>;
				active-ratio-boost = <35>;
			};
			/* big cores */
			coregroup2 {
				active-ratio-limit = <30>;
				active-ratio-boost = <0>;
			};
		};

		emstune {
			mode-map {
				mode0 {
					desc = "normal";
					boost_level = <3>;

					level0 {
						set = <&set0>;
					};
					level1 {
						set = <&set3>;
					};
					level2 {
						set = <&set6>;
					};
					level3 {
						set = <&set9>;
					};
				};
				mode1 {
					desc = "power-scenario";
					boost_level = <3>;

					level0 {
						set = <&set1>;
					};
					level1 {
						set = <&set4>;
					};
					level2 {
						set = <&set7>;
					};
					level3 {
						set = <&set10>;
					};
				};
				mode2 {
					desc = "performance";
					boost_level = <3>;

					level0 {
						set = <&set2>;
					};
					level1 {
						set = <&set5>;
					};
					level2 {
						set = <&set8>;
					};
					level3 {
						set = <&set11>;
					};
				};
			};

			set0: set@0000{
				idx = <0>;
				desc = "normal default";

				prefer_idle {   /* root fg bg ta rt */
					enabled  = <  0  0  0  0  0  >;
				};

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 200 200  33  45>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 200 200  33  45>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu    0   1   2   3   4   5   6   7 */
					root            = <125 125 125 125 250 250  41  56>;
					foreground      = <125 125 125 125 250 250  41  56>;
					background      = <125 125 125 125 250 250  41  56>;
					top-app         = <125 125 125 125 250 250  41  56>;
					rt              = <125 125 125 125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  5  5  5  5  5  5  5  5 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};

				/* cpus allowed applied to core selection */
				cpus_allowed {
					target-sched-class = <EMS_SCHED_FAIR>;

					root		= "0-7";
					foreground 	= "0-7";
					background	= "0-7";
					top-app		= "0-7";
					rt		= "0-7";
				};

				/* gov-data used by CPUFreq governor */
				esg {			/* LIT MED BIG */
					step		= <  4   6   8 >;
				};

				/* Ontime Migration */
				ontime {        /* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;

					dom_list_u {
						domain0 {
							cpus = "0-3";
							lower-boundary = <0>;
							upper-boundary = <105>;
						};
						domain1 {
							cpus = "4-5";
							lower-boundary = <106>;
							upper-boundary = <586>;
						};
						domain2 {
							cpus = "6-7";
							lower-boundary = <205>;
							upper-boundary = <1024>;
						};
					};
					dom_list_s {
						domain0 {
							cpus = "0-3";
							lower-boundary = <0>;
							upper-boundary = <51>;
						};
						domain1 {
							cpus = "4-5";
							lower-boundary = <41>;
							upper-boundary = <344>;
						};
						domain2 {
							cpus = "6-7";
							lower-boundary = <235>;
							upper-boundary = <1024>;
						};
					};
				};

				util_est {	/* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;
				};
			};

			set1: set@0001{
				idx = <1>;
				desc = "power-scenario default";

				prefer_idle {   /* root fg bg ta rt */
					enabled  = <  0  0  0  0  0  >;
				};

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <800 800 800 800 200 200  33  45>;
					foreground      = <800 800 800 800 200 200  33  45>;
					background      = <800 800 800 800 200 200  33  45>;
					top-app         = <800 800 800 800 200 200  33  45>;
					rt              = <800 800 800 800 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = <1000 1000 1000 1000 250 250  41  56>;
					foreground      = <1000 1000 1000 1000 250 250  41  56>;
					background      = <1000 1000 1000 1000 250 250  41  56>;
					top-app         = <1000 1000 1000 1000 250 250  41  56>;
					rt              = <1000 1000 1000 1000 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  0  0  0  0  0  0  0  0 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};

				/* cpus allowed applied to core selection */
				cpus_allowed {
					target-sched-class = <EMS_SCHED_FAIR>;

					root		= "0-7";
					foreground 	= "0-7";
					background	= "0-7";
					top-app		= "0-7";
					rt		= "0-7";
				};

				/* gov-data used by CPUFreq governor */
				esg {		/* LIT MED BIG */
					step		= < 10   8  10>;
				};

				/* Ontime Migration */
				ontime {        /* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;

					dom_list_u {
						domain0 {
							cpus = "0-3";
							lower-boundary = <0>;
							upper-boundary = <105>;
						};
						domain1 {
							cpus = "4-5";
							lower-boundary = <106>;
							upper-boundary = <586>;
						};
						domain2 {
							cpus = "6-7";
							lower-boundary = <205>;
							upper-boundary = <1024>;
						};
					};
					dom_list_s {
						domain0 {
							cpus = "0-3";
							lower-boundary = <0>;
							upper-boundary = <51>;
						};
						domain1 {
							cpus = "4-5";
							lower-boundary = <41>;
							upper-boundary = <344>;
						};
						domain2 {
							cpus = "6-7";
							lower-boundary = <235>;
							upper-boundary = <1024>;
						};
					};
				};

				util_est {	/* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;
				};
			};

			set2: set@0002{
				idx = <2>;
				desc = "performance default";

				prefer_idle {   /* root fg bg ta rt */
					enabled  = <  0  0  0  0  0  >;
				};

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 200 200  33  45>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 200 200  33  45>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu    0   1   2   3   4   5   6   7 */
					root            = <125 125 125 125 250 250  41  56>;
					foreground      = <125 125 125 125 250 250  41  56>;
					background      = <125 125 125 125 250 250  41  56>;
					top-app         = <125 125 125 125 250 250  41  56>;
					rt              = <125 125 125 125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = < 80 80 80 80 80 80  5  5 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};

				/* cpus allowed applied to core selection */
				cpus_allowed {
					target-sched-class = <EMS_SCHED_FAIR>;

					root		= "0-7";
					foreground 	= "0-7";
					background	= "0-7";
					top-app		= "0-7";
					rt		= "0-7";
				};

				/* gov-data used by CPUFreq governor */
				esg {			/* LIT MED BIG */
					step		= <  4   2   8 >;
				};

				/* Ontime Migration */
				ontime {        /* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;

					dom_list_u {
						domain0 {
							cpus = "0-3";
							lower-boundary = <0>;
							upper-boundary = <105>;
						};
						domain1 {
							cpus = "4-5";
							lower-boundary = <106>;
							upper-boundary = <586>;
						};
						domain2 {
							cpus = "6-7";
							lower-boundary = <205>;
							upper-boundary = <1024>;
						};
					};
					dom_list_s {
						domain0 {
							cpus = "0-3";
							lower-boundary = <0>;
							upper-boundary = <51>;
						};
						domain1 {
							cpus = "4-5";
							lower-boundary = <41>;
							upper-boundary = <344>;
						};
						domain2 {
							cpus = "6-7";
							lower-boundary = <235>;
							upper-boundary = <1024>;
						};
					};
				};

				util_est {	/* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;
				};
			};

			set3: set@0003{
				idx = <3>;
				desc = "normal med boost";

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 300 300 200 212>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 300 300 200 212>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = < 125  125  125  125 250 250  41  56>;
					foreground      = < 125  125  125  125 600 600 300 318>;
					background      = < 125  125  125  125 250 250  41  56>;
					top-app         = < 125  125  125  125 600 600 300 318>;
					rt              = < 125  125  125  125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  5  5  5  5  5  5  5  5 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set4: set@0004{
				idx = <4>;
				desc = "power-scenario med boost";

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <800 800 800 800 200 200  33  45>;
					foreground      = <100 100 100 100 300 300 200 212>;
					background      = <800 800 800 800 200 200  33  45>;
					top-app         = <100 100 100 100 300 300 200 212>;
					rt              = <800 800 800 800 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = <1000 1000 1000 1000 250 250  41  56>;
					foreground      = < 125  125  125  125 600 600 300 318>;
					background      = <1000 1000 1000 1000 250 250  41  56>;
					top-app         = < 125  125  125  125 600 600 300 318>;
					rt              = <1000 1000 1000 1000 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  0  0  0  0  0  0  0  0 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set5: set@0005{
				idx = <5>;
				desc = "performance med boost";

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 300 300 200 212>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 300 300 200 212>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = < 125  125  125  125 250 250  41  56>;
					foreground      = < 125  125  125  125 600 600 300 318>;
					background      = < 125  125  125  125 250 250  41  56>;
					top-app         = < 125  125  125  125 600 600 300 318>;
					rt              = < 125  125  125  125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = < 80 80 80 80 80 80  5  5 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set6: set@0006{
				idx = <6>;
				desc = "normal touch boost";

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 300 300 200 212>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 300 300 200 212>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = < 125  125  125  125 250 250  41  56>;
					foreground      = < 125  125  125  125 600 600 300 318>;
					background      = < 125  125  125  125 250 250  41  56>;
					top-app         = < 125  125  125  125 600 600 300 318>;
					rt              = < 125  125  125  125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = < 20 20 20 20 20 20 20 20 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set7: set@0007{
				idx = <7>;
				desc = "power-scenario touch boost";

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <800 800 800 800 200 200  33  45>;
					foreground      = <100 100 100 100 300 300 200 212>;
					background      = <800 800 800 800 200 200  33  45>;
					top-app         = <100 100 100 100 300 300 200 212>;
					rt              = <800 800 800 800 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = <1000 1000 1000 1000 250 250  41  56>;
					foreground      = < 125  125  125  125 600 600 300 318>;
					background      = <1000 1000 1000 1000 250 250  41  56>;
					top-app         = < 125  125  125  125 600 600 300 318>;
					rt              = <1000 1000 1000 1000 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  0  0  0  0  0  0  0  0 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set8: set@0008{
				idx = <8>;
				desc = "performance touch boost";

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 300 300 200 212>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 300 300 200 212>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = < 125  125  125  125 250 250  41  56>;
					foreground      = < 125  125  125  125 600 600 300 318>;
					background      = < 125  125  125  125 250 250  41  56>;
					top-app         = < 125  125  125  125 600 600 300 318>;
					rt              = < 125  125  125  125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = < 80 80 80 80 80 80 20 20 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set9: set@0009{
				idx = <9>;
				desc = "normal big boost";

				prefer_idle {   /* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;
				};

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 100 100 100 112>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 100 100 100 112>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu    0   1   2   3   4   5   6   7 */
					root            = <125 125 125 125 250 250  41  56>;
					foreground      = <125 125 125 125 125 125 125 140>;
					background      = <125 125 125 125 250 250  41  56>;
					top-app         = <125 125 125 125 125 125 125 140>;
					rt              = <125 125 125 125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				/*
				 * HACK:
				 * To support negative boost, compensate dt_value during boottime
				 * Compensation executed only one time when paring DT during Booting Time
				 * Compensation Value = DT_Value - 100
				 * 	0~100   => -100~0
				 * 	101~200 => 1~100
				 */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  5  5  5  5  5  5  5  5 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set10: set@0010{
				idx = <10>;
				desc = "power-scenario big boost";

				prefer_idle {   /* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;
				};

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <800 800 800 800 200 200  33  45>;
					foreground      = <100 100 100 100 100 100 100 112>;
					background      = <800 800 800 800 200 200  33  45>;
					top-app         = <100 100 100 100 100 100 100 112>;
					rt              = <800 800 800 800 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu     0    1    2    3   4   5   6   7 */
					root            = <1000 1000 1000 1000 250 250  41  56>;
					foreground      = < 125  125  125  125 125 125 125 140>;
					background      = <1000 1000 1000 1000 250 250  41  56>;
					top-app         = < 125  125  125  125 125 125 125 140>;
					rt              = <1000 1000 1000 1000 250 250  41  56>;
				};


				/* Boosting margin applied to frequency selection */
				/*
				 * HACK:
				 * To support negative boost, compensate dt_value during boottime
				 * Compensation executed only one time when paring DT during Booting Time
				 * Compensation Value = DT_Value - 100
				 * 	0~100   => -100~0
				 * 	101~200 => 1~100
				 */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = <  0  0  0  0  0  0  0  0 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};

			set11: set@0011{
				idx = <11>;
				desc = "performance big boost";

				prefer_idle {   /* root fg bg ta rt */
					enabled  = <  0  1  0  1  0  >;
				};

				/* weight (%) applied to active cpu's efficiency */
				weight {           /* cpu    0   1   2   3   4   5   6   7 */
					root            = <100 100 100 100 200 200  33  45>;
					foreground      = <100 100 100 100 100 100 100 112>;
					background      = <100 100 100 100 200 200  33  45>;
					top-app         = <100 100 100 100 100 100 100 112>;
					rt              = <100 100 100 100 200 200  33  45>;
				};

				/* weight (%) applied to idle cpu's efficiency */
				idle_weight {      /* cpu    0   1   2   3   4   5   6   7 */
					root            = <125 125 125 125 250 250  41  56>;
					foreground      = <125 125 125 125 125 125 125 140>;
					background      = <125 125 125 125 250 250  41  56>;
					top-app         = <125 125 125 125 125 125 125 140>;
					rt              = <125 125 125 125 250 250  41  56>;
				};

				/* Boosting margin applied to frequency selection */
				freq_boost {       /* cpu    0  1  2  3  4  5  6  7 */
					root            = <  0  0  0  0  0  0  0  0 >;
					foreground      = <  0  0  0  0  0  0  0  0 >;
					background      = <  0  0  0  0  0  0  0  0 >;
					top-app         = < 80 80 80 80 80 80  5  5 >;
					rt              = <  0  0  0  0  0  0  0  0 >;
				};
			};
		};
	};
};
